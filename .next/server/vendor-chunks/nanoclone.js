"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/nanoclone";
exports.ids = ["vendor-chunks/nanoclone"];
exports.modules = {

/***/ "(ssr)/./node_modules/nanoclone/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/nanoclone/src/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ clone)\n/* harmony export */ });\n// ES6 Map\nvar map;\ntry {\n    map = Map;\n} catch (_) {}\nvar set;\n// ES6 Set\ntry {\n    set = Set;\n} catch (_) {}\nfunction baseClone(src, circulars, clones) {\n    // Null/undefined/functions/etc\n    if (!src || typeof src !== \"object\" || typeof src === \"function\") {\n        return src;\n    }\n    // DOM Node\n    if (src.nodeType && \"cloneNode\" in src) {\n        return src.cloneNode(true);\n    }\n    // Date\n    if (src instanceof Date) {\n        return new Date(src.getTime());\n    }\n    // RegExp\n    if (src instanceof RegExp) {\n        return new RegExp(src);\n    }\n    // Arrays\n    if (Array.isArray(src)) {\n        return src.map(clone);\n    }\n    // ES6 Maps\n    if (map && src instanceof map) {\n        return new Map(Array.from(src.entries()));\n    }\n    // ES6 Sets\n    if (set && src instanceof set) {\n        return new Set(Array.from(src.values()));\n    }\n    // Object\n    if (src instanceof Object) {\n        circulars.push(src);\n        var obj = Object.create(src);\n        clones.push(obj);\n        for(var key in src){\n            var idx = circulars.findIndex(function(i) {\n                return i === src[key];\n            });\n            obj[key] = idx > -1 ? clones[idx] : baseClone(src[key], circulars, clones);\n        }\n        return obj;\n    }\n    // ???\n    return src;\n}\nfunction clone(src) {\n    return baseClone(src, [], []);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmFub2Nsb25lL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsVUFBVTtBQUNWLElBQUlBO0FBQ0osSUFBSTtJQUNGQSxNQUFNQztBQUNSLEVBQUUsT0FBT0MsR0FBRyxDQUFFO0FBQ2QsSUFBSUM7QUFFSixVQUFVO0FBQ1YsSUFBSTtJQUNGQSxNQUFNQztBQUNSLEVBQUUsT0FBT0YsR0FBRyxDQUFFO0FBRWQsU0FBU0csVUFBV0MsR0FBRyxFQUFFQyxTQUFTLEVBQUVDLE1BQU07SUFDeEMsK0JBQStCO0lBQy9CLElBQUksQ0FBQ0YsT0FBTyxPQUFPQSxRQUFRLFlBQVksT0FBT0EsUUFBUSxZQUFZO1FBQ2hFLE9BQU9BO0lBQ1Q7SUFFQSxXQUFXO0lBQ1gsSUFBSUEsSUFBSUcsUUFBUSxJQUFJLGVBQWVILEtBQUs7UUFDdEMsT0FBT0EsSUFBSUksU0FBUyxDQUFDO0lBQ3ZCO0lBRUEsT0FBTztJQUNQLElBQUlKLGVBQWVLLE1BQU07UUFDdkIsT0FBTyxJQUFJQSxLQUFLTCxJQUFJTSxPQUFPO0lBQzdCO0lBRUEsU0FBUztJQUNULElBQUlOLGVBQWVPLFFBQVE7UUFDekIsT0FBTyxJQUFJQSxPQUFPUDtJQUNwQjtJQUVBLFNBQVM7SUFDVCxJQUFJUSxNQUFNQyxPQUFPLENBQUNULE1BQU07UUFDdEIsT0FBT0EsSUFBSU4sR0FBRyxDQUFDZ0I7SUFDakI7SUFFQSxXQUFXO0lBQ1gsSUFBSWhCLE9BQU9NLGVBQWVOLEtBQUs7UUFDN0IsT0FBTyxJQUFJQyxJQUFJYSxNQUFNRyxJQUFJLENBQUNYLElBQUlZLE9BQU87SUFDdkM7SUFFQSxXQUFXO0lBQ1gsSUFBSWYsT0FBT0csZUFBZUgsS0FBSztRQUM3QixPQUFPLElBQUlDLElBQUlVLE1BQU1HLElBQUksQ0FBQ1gsSUFBSWEsTUFBTTtJQUN0QztJQUVBLFNBQVM7SUFDVCxJQUFJYixlQUFlYyxRQUFRO1FBQ3pCYixVQUFVYyxJQUFJLENBQUNmO1FBQ2YsSUFBSWdCLE1BQU1GLE9BQU9HLE1BQU0sQ0FBQ2pCO1FBQ3hCRSxPQUFPYSxJQUFJLENBQUNDO1FBQ1osSUFBSyxJQUFJRSxPQUFPbEIsSUFBSztZQUNuQixJQUFJbUIsTUFBTWxCLFVBQVVtQixTQUFTLENBQUMsU0FBVUMsQ0FBQztnQkFDdkMsT0FBT0EsTUFBTXJCLEdBQUcsQ0FBQ2tCLElBQUk7WUFDdkI7WUFDQUYsR0FBRyxDQUFDRSxJQUFJLEdBQUdDLE1BQU0sQ0FBQyxJQUFJakIsTUFBTSxDQUFDaUIsSUFBSSxHQUFHcEIsVUFBVUMsR0FBRyxDQUFDa0IsSUFBSSxFQUFFakIsV0FBV0M7UUFDckU7UUFDQSxPQUFPYztJQUNUO0lBRUEsTUFBTTtJQUNOLE9BQU9oQjtBQUNUO0FBRWUsU0FBU1UsTUFBT1YsR0FBRztJQUNoQyxPQUFPRCxVQUFVQyxLQUFLLEVBQUUsRUFBRSxFQUFFO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmFzdGthcnQtbGF0ZXN0LW5leHQtYWRtaW4vLi9ub2RlX21vZHVsZXMvbmFub2Nsb25lL3NyYy9pbmRleC5qcz82YjViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEVTNiBNYXBcbnZhciBtYXBcbnRyeSB7XG4gIG1hcCA9IE1hcFxufSBjYXRjaCAoXykgeyB9XG52YXIgc2V0XG5cbi8vIEVTNiBTZXRcbnRyeSB7XG4gIHNldCA9IFNldFxufSBjYXRjaCAoXykgeyB9XG5cbmZ1bmN0aW9uIGJhc2VDbG9uZSAoc3JjLCBjaXJjdWxhcnMsIGNsb25lcykge1xuICAvLyBOdWxsL3VuZGVmaW5lZC9mdW5jdGlvbnMvZXRjXG4gIGlmICghc3JjIHx8IHR5cGVvZiBzcmMgIT09ICdvYmplY3QnIHx8IHR5cGVvZiBzcmMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gc3JjXG4gIH1cblxuICAvLyBET00gTm9kZVxuICBpZiAoc3JjLm5vZGVUeXBlICYmICdjbG9uZU5vZGUnIGluIHNyYykge1xuICAgIHJldHVybiBzcmMuY2xvbmVOb2RlKHRydWUpXG4gIH1cblxuICAvLyBEYXRlXG4gIGlmIChzcmMgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKHNyYy5nZXRUaW1lKCkpXG4gIH1cblxuICAvLyBSZWdFeHBcbiAgaWYgKHNyYyBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgIHJldHVybiBuZXcgUmVnRXhwKHNyYylcbiAgfVxuXG4gIC8vIEFycmF5c1xuICBpZiAoQXJyYXkuaXNBcnJheShzcmMpKSB7XG4gICAgcmV0dXJuIHNyYy5tYXAoY2xvbmUpXG4gIH1cblxuICAvLyBFUzYgTWFwc1xuICBpZiAobWFwICYmIHNyYyBpbnN0YW5jZW9mIG1hcCkge1xuICAgIHJldHVybiBuZXcgTWFwKEFycmF5LmZyb20oc3JjLmVudHJpZXMoKSkpXG4gIH1cblxuICAvLyBFUzYgU2V0c1xuICBpZiAoc2V0ICYmIHNyYyBpbnN0YW5jZW9mIHNldCkge1xuICAgIHJldHVybiBuZXcgU2V0KEFycmF5LmZyb20oc3JjLnZhbHVlcygpKSlcbiAgfVxuXG4gIC8vIE9iamVjdFxuICBpZiAoc3JjIGluc3RhbmNlb2YgT2JqZWN0KSB7XG4gICAgY2lyY3VsYXJzLnB1c2goc3JjKVxuICAgIHZhciBvYmogPSBPYmplY3QuY3JlYXRlKHNyYylcbiAgICBjbG9uZXMucHVzaChvYmopXG4gICAgZm9yICh2YXIga2V5IGluIHNyYykge1xuICAgICAgdmFyIGlkeCA9IGNpcmN1bGFycy5maW5kSW5kZXgoZnVuY3Rpb24gKGkpIHtcbiAgICAgICAgcmV0dXJuIGkgPT09IHNyY1trZXldXG4gICAgICB9KVxuICAgICAgb2JqW2tleV0gPSBpZHggPiAtMSA/IGNsb25lc1tpZHhdIDogYmFzZUNsb25lKHNyY1trZXldLCBjaXJjdWxhcnMsIGNsb25lcylcbiAgICB9XG4gICAgcmV0dXJuIG9ialxuICB9XG5cbiAgLy8gPz8/XG4gIHJldHVybiBzcmNcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY2xvbmUgKHNyYykge1xuICByZXR1cm4gYmFzZUNsb25lKHNyYywgW10sIFtdKVxufVxuIl0sIm5hbWVzIjpbIm1hcCIsIk1hcCIsIl8iLCJzZXQiLCJTZXQiLCJiYXNlQ2xvbmUiLCJzcmMiLCJjaXJjdWxhcnMiLCJjbG9uZXMiLCJub2RlVHlwZSIsImNsb25lTm9kZSIsIkRhdGUiLCJnZXRUaW1lIiwiUmVnRXhwIiwiQXJyYXkiLCJpc0FycmF5IiwiY2xvbmUiLCJmcm9tIiwiZW50cmllcyIsInZhbHVlcyIsIk9iamVjdCIsInB1c2giLCJvYmoiLCJjcmVhdGUiLCJrZXkiLCJpZHgiLCJmaW5kSW5kZXgiLCJpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/nanoclone/src/index.js\n");

/***/ })

};
;